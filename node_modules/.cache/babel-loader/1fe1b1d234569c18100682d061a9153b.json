{"ast":null,"code":"import _classCallCheck from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/home/marwan/Desktop/store1/game/src/App.js\",\n    _this = this;\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport { getGithubData } from './utilities';\n\nvar PlayerCard = function PlayerCard(_ref) {\n  var color = _ref.color,\n      symbol = _ref.symbol;\n  var style = {\n    backgroundColor: color,\n    backgroundImage: \"url(./img/\" + symbol + \".png)\"\n  };\n  return React.createElement(\"div\", {\n    style: style,\n    className: \"player-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, symbol);\n};\n\nvar Playerphoto = function Playerphoto(props) {\n  return React.createElement(\"img\", {\n    src: props.imgsrc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n};\n\nthis.setState({\n  player: player\n});\n\nvar playerdiv = function playerdiv() {\n  return React.createElement(\"div\", {\n    className: \"photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onclick: _this.player2name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Get Photo \"), React.createElement(Playerphoto, {\n    imgsrc: _this.state.data.avatar_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this2.componentWillMount = function () {\n      getGithubData('MarwanElkhoudary').then(function (userResponse) {\n        _this2.setState({\n          data: userResponse\n        }, function () {\n          console.log(_this2.state.data.avatar_url);\n        });\n      });\n    };\n\n    _this2.decideWinner = function () {\n      var _this2$state = _this2.state,\n          playerYellow = _this2$state.playerYellow,\n          playerGreen = _this2$state.playerGreen;\n\n      if (playerGreen === playerYellow) {\n        return \"It's a draw!\";\n      }\n\n      if (playerGreen === \"rock\" && playerYellow === \"scissors\" || playerGreen === \"paper\" && playerYellow === \"rock\" || playerGreen === \"scissors\" && playerYellow === \"paper\") {\n        return \"Green Player Wins !\";\n      }\n\n      return \"Yellow Player Wins !\";\n    };\n\n    _this2.runGame = function () {\n      var counter = 0;\n      var myInterval = setInterval(function () {\n        counter++;\n\n        _this2.setState({\n          playerGreen: _this2.symbols[Math.floor(Math.random() * 3)],\n          playerYellow: _this2.symbols[Math.floor(Math.random() * 3)]\n        });\n\n        if (counter > 20) {\n          clearInterval(myInterval);\n\n          _this2.setState({\n            winner: _this2.decideWinner()\n          });\n        }\n      }, 100);\n    };\n\n    _this2.symbols = [\"rock\", \"paper\", \"scissors\"];\n    _this2.state = {\n      data: undefined\n    };\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.data) return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" loading \");\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onclick: this.player1name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" Get Photo \"), React.createElement(Playerphoto, {\n        imgsrc: this.state.data.avatar_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(PlayerCard, {\n        color: \"green\",\n        symbol: this.state.playerGreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(PlayerCard, {\n        color: \"yellow\",\n        symbol: this.state.playerYellow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.winner), React.createElement(\"button\", {\n        onClick: this.runGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" Run Game \")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/marwan/Desktop/store1/game/src/App.js"],"names":["React","Component","getGithubData","PlayerCard","color","symbol","style","backgroundColor","backgroundImage","Playerphoto","props","imgsrc","setState","player","playerdiv","player2name","state","data","avatar_url","App","componentWillMount","then","userResponse","console","log","decideWinner","playerYellow","playerGreen","runGame","counter","myInterval","setInterval","symbols","Math","floor","random","clearInterval","winner","undefined","player1name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {getGithubData} from './utilities';\n\nconst PlayerCard = ({ color, symbol }) => {\n    const style = {\n        backgroundColor: color,\n        backgroundImage: \"url(./img/\" + symbol + \".png)\"\n    }\n    return ( <div style = {style} className = \"player-card\" >\n                          {symbol} \n              </div>\n    )\n}\n\nconst Playerphoto = (props) =>{\n    return <img src={props.imgsrc}/>\n}\n\nthis.setState({player})\nconst playerdiv = () => {\n    return (\n        <div className =\"photo\"> \n        <input type=\"text\"/>\n        <button onclick = {this.player2name} > Get Photo </button>\n        < Playerphoto imgsrc = {this.state.data.avatar_url}/>\n    </div>\n    )\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.symbols = [\"rock\", \"paper\", \"scissors\"]\n        this.state = {data:undefined}\n    }\n\n\n\n    componentWillMount = () => {\n        getGithubData('MarwanElkhoudary')\n          .then(userResponse => {\n            this.setState({data: userResponse},()=>{console.log(this.state.data.avatar_url)});\n          });\n      };\n \n       \n  \n        decideWinner = () => {\n            const { playerYellow, playerGreen } = this.state\n            if (playerGreen === playerYellow) {\n                return \"It's a draw!\";\n\n            } if ((playerGreen === \"rock\" && playerYellow === \"scissors\")||\n                  (playerGreen === \"paper\" && playerYellow === \"rock\")||\n                  (playerGreen === \"scissors\" && playerYellow === \"paper\")) {\n                return \"Green Player Wins !\"\n                \n            }\n                return \"Yellow Player Wins !\"\n        }\n\n    \n    runGame = () => {\n        let counter = 0;\n        let myInterval = setInterval(() => {\n            counter++\n            this.setState({\n                playerGreen: this.symbols[Math.floor(Math.random() * 3)],\n                playerYellow: this.symbols[Math.floor(Math.random() * 3)]\n\n            })\n            if (counter > 20) {\n                clearInterval(myInterval);\n                this.setState({winner: this.decideWinner()})\n            }\n        }, 100)\n    }\n    render() {\n\n        if (!this.state.data) return <h1> loading </h1>\n        return ( \n        <div className = \"App\" >\n            <div className =\"photo\"> \n                <input type=\"text\"/>\n                <button onclick = {this.player1name} > Get Photo </button>\n                < Playerphoto imgsrc = {this.state.data.avatar_url}/>\n            </div>\n\n            <div className =\"game\"> \n                < PlayerCard color = \"green\" symbol = { this.state.playerGreen }/>\n                < PlayerCard color = \"yellow\" symbol = { this.state.playerYellow }/>\n                <p>{this.state.winner}</p>\n                < button onClick = {this.runGame} > Run Game </button> \n            </div>\n            \n\n\n        </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
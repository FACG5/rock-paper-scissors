{"ast":null,"code":"import _classCallCheck from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marwan/Desktop/store1/game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marwan/Desktop/store1/game/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { getGithubData } from './utilities';\n\nvar PlayerCard = function PlayerCard(_ref) {\n  var color = _ref.color,\n      symbol = _ref.symbol;\n  var style = {\n    backgroundColor: color,\n    backgroundImage: \"url(./img/\" + symbol + \".png)\"\n  };\n  return React.createElement(\"div\", {\n    style: style,\n    className: \"player-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, symbol);\n};\n\nPlayerphoto = function Playerphoto(props) {\n  return React.createElement(\"img\", {\n    src: \"{props.imgsrc}\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentWillMount = function () {\n      getGithubData('MarwanElkhoudary').then(function (userResponse) {\n        _this.setState({\n          data: userResponse\n        }, function () {\n          console.log(_this.state.data);\n        });\n      });\n    };\n\n    _this.decideWinner = function () {\n      var _this$state = _this.state,\n          playerYellow = _this$state.playerYellow,\n          playerGreen = _this$state.playerGreen;\n\n      if (playerGreen === playerYellow) {\n        return \"It's a draw!\";\n      }\n\n      if (playerGreen === \"rock\" && playerYellow === \"scissors\" || playerGreen === \"paper\" && playerYellow === \"rock\" || playerGreen === \"scissors\" && playerYellow === \"paper\") {\n        return \"Green Player Wins !\";\n      }\n\n      return \"Yellow Player Wins !\";\n    };\n\n    _this.runGame = function () {\n      var counter = 0;\n      var myInterval = setInterval(function () {\n        counter++;\n\n        _this.setState({\n          playerGreen: _this.symbols[Math.floor(Math.random() * 3)],\n          playerYellow: _this.symbols[Math.floor(Math.random() * 3)]\n        });\n\n        if (counter > 20) {\n          clearInterval(myInterval);\n\n          _this.setState({\n            winner: _this.decideWinner()\n          });\n        }\n      }, 100);\n    };\n\n    _this.symbols = [\"rock\", \"paper\", \"scissors\"];\n    _this.state = {\n      data: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(PlayerCard, {\n        color: \"green\",\n        symbol: this.state.playerGreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(PlayerCard, {\n        color: \"yellow\",\n        symbol: this.state.playerYellow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.winner), React.createElement(\"button\", {\n        onClick: this.runGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Run Game \"), \" \");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/marwan/Desktop/store1/game/src/App.js"],"names":["React","Component","getGithubData","PlayerCard","color","symbol","style","backgroundColor","backgroundImage","Playerphoto","props","App","componentWillMount","then","userResponse","setState","data","console","log","state","decideWinner","playerYellow","playerGreen","runGame","counter","myInterval","setInterval","symbols","Math","floor","random","clearInterval","winner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {getGithubData} from './utilities';\n\nconst PlayerCard = ({ color, symbol }) => {\n    const style = {\n        backgroundColor: color,\n        backgroundImage: \"url(./img/\" + symbol + \".png)\"\n    }\n    return ( <div style = {style} className = \"player-card\" >\n                          {symbol} \n              </div>\n    )\n}\n\n Playerphoto = (props) =>{\n    return <img src=\"{props.imgsrc}\" />\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.symbols = [\"rock\", \"paper\", \"scissors\"]\n        this.state = {data:null}\n    }\n\n    componentWillMount = () => {\n        getGithubData('MarwanElkhoudary')\n          .then(userResponse => {\n            this.setState({data: userResponse},()=>{console.log(this.state.data)});\n          });\n      };\n \n       \n  \n        decideWinner = () => {\n            const { playerYellow, playerGreen } = this.state\n            if (playerGreen === playerYellow) {\n                return \"It's a draw!\";\n\n            } if ((playerGreen === \"rock\" && playerYellow === \"scissors\")||\n                  (playerGreen === \"paper\" && playerYellow === \"rock\")||\n                  (playerGreen === \"scissors\" && playerYellow === \"paper\")) {\n                return \"Green Player Wins !\"\n                \n            }\n                return \"Yellow Player Wins !\"\n        }\n\n    \n    runGame = () => {\n        let counter = 0;\n        let myInterval = setInterval(() => {\n            counter++\n            this.setState({\n                playerGreen: this.symbols[Math.floor(Math.random() * 3)],\n                playerYellow: this.symbols[Math.floor(Math.random() * 3)]\n\n            })\n            if (counter > 20) {\n                clearInterval(myInterval);\n                this.setState({winner: this.decideWinner()})\n            }\n        }, 100)\n    }\n    render() {\n        return ( <div className = \"App\" >\n            {/* < Playerphoto imgsrc = {this.state.data.avatar_url}/> */}\n            < PlayerCard color = \"green\" symbol = { this.state.playerGreen }/>\n            < PlayerCard color = \"yellow\" symbol = { this.state.playerYellow }/>\n            <p>{this.state.winner}</p>\n            < button onClick = {this.runGame} > Run Game </button> </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}